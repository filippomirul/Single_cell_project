library(tidyverse)
library(Seurat)
library(patchwork)
getwd()
data <- load("../scRNAseq_CS4_unknown-20230522/data/BUM.rds")
data <- readRDS("../scRNAseq_CS4_unknown-20230522/data/BUM.rds")
View(data)
??ifnb_list
ifnb_list
load("./data/ifnb.RData")
norm_data <- NormalizeData(data)
nn_data <- FindVariableFeatures(norm_data)
View(nn_data)
dim(data)
colnames(data)
View(data)
View(nn_data)
data <- readRDS("data/BUM.rds")
gc()
library(tidyverse) # collection of packages for tidy data analysis (ggplot, dplyr, ...)
library(Seurat) # single cell analysis (Check that the version is at least 4.0.0)
library(patchwork) # combine separate ggplots into the same graphic
load("./data/ifnb.RData")
ifnb_list
ifnb_list <- lapply(X = ifnb_list, FUN = function(x) {
x <- NormalizeData(x)
x <- FindVariableFeatures(x)
}
)
View(ifnb_list)
help("SelectIntegrationFeatures")
integration_features <- SelectIntegrationFeatures(object.list = ifnb_list)
head(integration_features)
integration_features
integration_anchors <- FindIntegrationAnchors(object.list = ifnb_list,
anchor.features = integration_features)
data <- readRDS("data/BUM.rds")
dim(data)
colnames(data)[1:15]
help(CreateSeuratObject)
library(tidyverse)
library(Seurat)
library(patchwork)
View(data)
dat <- CreateSeuratObject(data, min.cells = 5, min.features = 50)
View(dat)
load("./data/pbmc.RData")
pbmc_mat[500:505, 1:30] # Examine a few genes in the first 30 cells
pbmc_mat[c("CD3D", "TCL1A", "MS4A1"), 1:30]
pbmc <- CreateSeuratObject(counts = pbmc_mat,
project = "pbmc", # name of the project
min.cells = 3,   # filter for genes (rows)
min.features = 50 # filter for cells (columns)
)
pbmc
View(pbmc_mat)
View(dat)
View(data)
View(pbmc_mat)
View(data)
View(pbmc_mat)
View(data)
# The [[ operator can add columns to the object meta.data, ideal to stash QC stats
pbmc[["percent_mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
# Show QC metrics for the first 5 cells
head(pbmc@meta.data, 5)
p1<- VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
p1
p1<- VlnPlot(data, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
View(pbmc)
p1<- VlnPlot(dat, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
help(PercentageFeatureSet)
head(dat@assays[["RNA"]]@meta.features)
dat@assays[["RNA"]]@meta.features
dat$orig.ident
dat$nFeature_RNA
head(dat@meta.data,10)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent_mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
dat@assays[["RNA"]]@meta.features
dat$orig.ident
dat$orig.ident[1]
View(dat)
dat@meta.data
dat@assays
pbmc[["percent_mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
help(PercentageFeatureSet)
dat[["percent_mt"]] <- PercentageFeatureSet(dat, pattern = "^MT-")
head(dat@meta.data, 5)
sum(dat@meta.data$percent_mt)
head(dat@assays[["RNA"]]@counts@p)
head(dat@assays[["RNA"]]@counts@i)
p1<- VlnPlot(dat, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"),
ncol = 3, pt.size = 0.01)
plot1 <- FeatureScatter(dat, feature1 = "nCount_RNA", feature2 = "percent_mt")
plot2 <- FeatureScatter(dat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
help(PercentageFeatureSet)
dat[["percent_mt"]] <- PercentageFeatureSet(dat, pattern = "^mt-")
head(dat@meta.data, 5)
sum(dat@meta.data$percent_mt)
dat@meta.data
